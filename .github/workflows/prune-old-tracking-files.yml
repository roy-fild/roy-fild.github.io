name: Prune old tracking result files

on:
  push:
    paths:
      - 'tracking/result/*.xlsx'   # 이 폴더 안 엑셀 변경에만 반응
  workflow_dispatch:               # 수동 실행 가능

permissions:
  contents: write                  # 삭제/커밋/푸시 권한

jobs:
  prune:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Keep only latest *_YYYYMMDD.xlsx per prefix
        shell: bash
        run: |
          set -euo pipefail

          DIR="tracking/result"
          cd "$DIR"

          # 대상 파일 목록(패턴: *_YYYYMMDD.xlsx)
          mapfile -t FILES < <(find . -maxdepth 1 -type f -name '*_[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].xlsx' -printf '%f\n' | sort)

          if [[ ${#FILES[@]} -eq 0 ]]; then
            echo "No matching files."
            exit 0
          fi

          # prefix별 최신 날짜만 남기고 나머지 삭제 목록 계산 (awk 이용)
          TO_DELETE=$(printf '%s\n' "${FILES[@]}" | awk '
            function max(a,b){return a>b?a:b}
            match($0,/^(.*)_([0-9]{8})\.xlsx$/,m){
              pref=m[1]; d=m[2];
              if (!(pref in maxd) || d>maxd[pref]) {
                maxd[pref]=d; latest[pref]=$0
              }
              all[pref]=all[pref] " " $0
            }
            END{
              for (p in all){
                n=split(all[p], arr, " ");
                for(i=1;i<=n;i++){
                  f=arr[i];
                  if(f!="" && f != latest[p]) print f
                }
              }
            }')

          if [[ -z "${TO_DELETE}" ]]; then
            echo "Nothing to delete."
          else
            echo "Deleting:"
            echo "${TO_DELETE}" | sed 's/^/  - /'
            # 실제 삭제
            while IFS= read -r f; do
              [[ -z "$f" ]] && continue
              rm -f -- "$f"
            done <<< "${TO_DELETE}"
          fi

      - name: Commit and push if changes
        shell: bash
        run: |
          set -euo pipefail
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: keep only latest *_yyyymmdd.xlsx per prefix in tracking/result"
            git push
          else
            echo "No changes to commit."
          fi
